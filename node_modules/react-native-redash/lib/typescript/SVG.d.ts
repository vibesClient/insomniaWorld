import Animated from "react-native-reanimated";
export interface ReanimatedPath {
    totalLength: number;
    segments: {
        start: number;
        end: number;
    }[];
    length: number[];
    start: number[];
    end: number[];
    p0x: number[];
    p0y: number[];
    p1x: number[];
    p1y: number[];
    p2x: number[];
    p2y: number[];
    p3x: number[];
    p3y: number[];
}
export declare const parsePath: (d: string) => ReanimatedPath;
export declare const getPointAtLength: (path: ReanimatedPath, length: Animated.Node<number>) => {
    x: Animated.Node<number>;
    y: Animated.Node<number>;
};
interface PathInterpolationConfig {
    inputRange: ReadonlyArray<Animated.Adaptable<number>>;
    outputRange: ReadonlyArray<ReanimatedPath | string>;
}
export declare const interpolatePath: (value: Animated.Adaptable<number>, config: PathInterpolationConfig) => Animated.Node<string>;
export declare const bInterpolatePath: (value: Animated.Value<number>, path1: ReanimatedPath, path2: ReanimatedPath) => Animated.Node<string>;
export {};
