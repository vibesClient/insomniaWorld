import Animated from"react-native-reanimated";var Value=Animated.Value,block=Animated.block,timing=Animated.timing,spring=Animated.spring,cond=Animated.cond,decay=Animated.decay,stopClock=Animated.stopClock,set=Animated.set,startClock=Animated.startClock,clockRunning=Animated.clockRunning,onChange=Animated.onChange;export function runDecay(clock,value,velocity,rerunDecaying){var state={finished:new Value(0),velocity:new Value(0),position:new Value(0),time:new Value(0)};var config={deceleration:0.99};return[cond(clockRunning(clock),0,[cond(rerunDecaying,0,[set(rerunDecaying,1),set(state.finished,0),set(state.velocity,velocity),set(state.position,value),set(state.time,0),startClock(clock)])]),decay(clock,state,config),cond(state.finished,stopClock(clock)),state.position];}export function runSpring(clock,value,dest){var config=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{toValue:new Value(0),damping:7,mass:1,stiffness:121.6,overshootClamping:false,restSpeedThreshold:0.001,restDisplacementThreshold:0.001};var state={finished:new Value(0),velocity:new Value(0),position:new Value(0),time:new Value(0)};return block([cond(clockRunning(clock),0,[set(state.finished,0),set(state.time,0),set(state.position,value),set(state.velocity,0),set(config.toValue,dest),startClock(clock)]),spring(clock,state,config),cond(state.finished,stopClock(clock)),state.position]);}export function runTiming(clock,value,config){var state={finished:new Value(0),position:new Value(0),time:new Value(0),frameTime:new Value(0)};return block([onChange(config.toValue,set(state.frameTime,0)),cond(clockRunning(clock),0,[set(state.finished,0),set(state.time,0),set(state.position,value),set(state.frameTime,0),startClock(clock)]),timing(clock,state,config),cond(state.finished,stopClock(clock)),state.position]);}
//# sourceMappingURL=AnimationRunners.js.map