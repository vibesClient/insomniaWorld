import _taggedTemplateLiteralLoose from"@babel/runtime/helpers/taggedTemplateLiteralLoose";import _toArray from"@babel/runtime/helpers/toArray";import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";function _templateObject2(){var data=_taggedTemplateLiteralLoose(["M",","," "]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteralLoose(["","C",","," ",","," ",",",""]);_templateObject=function _templateObject(){return data;};return data;}import Animated from"react-native-reanimated";import parseSVG from"parse-svg-path";import absSVG from"abs-svg-path";import normalizeSVG from"normalize-svg-path";import{find}from"./Arrays";import{cubicBezier}from"./Math";import cubicBezierLength from"./CubicBezierLength";var Value=Animated.Value,lessOrEq=Animated.lessOrEq,greaterOrEq=Animated.greaterOrEq,and=Animated.and,cond=Animated.cond,interpolate=Animated.interpolate,reConcat=Animated.concat;var MX=1;var MY=2;var CX1=1;var CY1=2;var CX2=3;var CY2=4;var CX=5;var CY=6;var concat=function concat(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return reConcat.apply(void 0,[args[0],args[1]].concat(_toConsumableArray(args.slice(2))));};export var parsePath=function parsePath(d){var _normalizeSVG=normalizeSVG(absSVG(parseSVG(d))),_normalizeSVG2=_toArray(_normalizeSVG),move=_normalizeSVG2[0],curves=_normalizeSVG2.slice(1);var parts=curves.map(function(curve,index){var prevCurve=curves[index-1];var p0=index===0?{x:move[MX],y:move[MY]}:{x:prevCurve[CX],y:prevCurve[CY]};var p1={x:curve[CX1],y:curve[CY1]};var p2={x:curve[CX2],y:curve[CY2]};var p3={x:curve[CX],y:curve[CY]};var length=cubicBezierLength(p0,p1,p2,p3);return{p0:p0,p1:p1,p2:p2,p3:p3,length:length};});var segments=parts.map(function(part,index){var start=parts.slice(0,index).reduce(function(acc,p){return acc+p.length;},0);var end=start+part.length;return{start:start,end:end};});return{segments:segments,totalLength:parts.reduce(function(acc,part){return acc+part.length;},0),length:parts.map(function(part){return part.length;}),start:segments.map(function(segment){return segment.start;}),end:segments.map(function(segment){return segment.end;}),p0x:parts.map(function(part){return part.p0.x;}),p0y:parts.map(function(part){return part.p0.y;}),p1x:parts.map(function(part){return part.p1.x;}),p1y:parts.map(function(part){return part.p1.y;}),p2x:parts.map(function(part){return part.p2.x;}),p2y:parts.map(function(part){return part.p2.y;}),p3x:parts.map(function(part){return part.p3.x;}),p3y:parts.map(function(part){return part.p3.y;})};};export var getPointAtLength=function getPointAtLength(path,length){var notFound=new Value(-1);var index=path.segments.reduce(function(acc,p,i){return cond(and(greaterOrEq(length,p.start),lessOrEq(length,p.end)),i,acc);},notFound);var start=find(path.start,index);var end=find(path.end,index);var p0x=find(path.p0x,index);var p1x=find(path.p1x,index);var p2x=find(path.p2x,index);var p3x=find(path.p3x,index);var p0y=find(path.p0y,index);var p1y=find(path.p1y,index);var p2y=find(path.p2y,index);var p3y=find(path.p3y,index);var t=interpolate(length,{inputRange:[start,end],outputRange:[0,1]});return{x:cubicBezier(t,p0x,p1x,p2x,p3x),y:cubicBezier(t,p0y,p1y,p2y,p3y)};};var animatedString=function animatedString(strings){var arr=[];var n=arguments.length<=1?0:arguments.length-1;for(var i=0;i<n;i+=1){arr.push(strings[i],i+1<1||arguments.length<=i+1?undefined:arguments[i+1]);}var end=strings[n];if(end){arr.push(end);}return concat.apply(void 0,_toConsumableArray(arr));};export var interpolatePath=function interpolatePath(value,config){var inputRange=config.inputRange;var paths=config.outputRange.map(function(path){return typeof path==="string"?parsePath(path):path;});var path=paths[0];var commands=path.segments.map(function(_,index){var mx=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p0x[index];})});var my=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p0y[index];})});var p1x=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p1x[index];})});var p1y=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p1y[index];})});var p2x=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p2x[index];})});var p2y=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p2y[index];})});var p3x=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p3x[index];})});var p3y=interpolate(value,{inputRange:inputRange,outputRange:paths.map(function(p){return p.p3y[index];})});return animatedString(_templateObject(),index===0?animatedString(_templateObject2(),mx,my):"",p1x,p1y,p2x,p2y,p3x,p3y);});return concat.apply(void 0,_toConsumableArray(commands));};export var bInterpolatePath=function bInterpolatePath(value,path1,path2){return interpolatePath(value,{inputRange:[0,1],outputRange:[path1,path2]});};
//# sourceMappingURL=SVG.js.map